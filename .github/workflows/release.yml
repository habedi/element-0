name: Create Releases

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  call_tests:
    uses: ./.github/workflows/tests.yml

  # This job creates the draft GitHub Release. It depends on the 'test' job.
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    # Try to publish only if the tests pass
    needs: call_tests
    if: success()

    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  # This job builds the project on each platform and uploads the binaries.
  build-and-upload:
    name: Build and Upload
    needs: create-release # This job runs after the release has been created.
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write # Required to upload assets to the release.
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux-gnu
            artifact_name: elz-repl-linux-x86_64.tar.gz
            asset_content_type: application/gzip
          - os: macos-latest
            target: aarch64-macos-none # Apple Silicon (ARM64)
            artifact_name: elz-repl-macos-aarch64.tar.gz
            asset_content_type: application/gzip
          - os: macos-latest
            target: x86_64-macos-none # Intel
            artifact_name: elz-repl-macos-x86_64.tar.gz
            asset_content_type: application/gzip
          - os: windows-latest
            target: x86_64-windows-msvc
            artifact_name: elz-repl-windows-x86_64.zip
            asset_content_type: application/zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: "0.14.1"

      - name: Build the binary
        run: zig build -Doptimize=ReleaseSmall -Dtarget=${{ matrix.target }}

      - name: Prepare artifact for Linux/macOS
        if: runner.os != 'Windows'
        run: |
          mkdir -p release
          mv zig-out/bin/elz-repl release/
          tar -czvf ${{ matrix.artifact_name }} -C release .

      - name: Prepare artifact for Windows
        if: runner.os == 'Windows'
        run: |
          mkdir release
          move zig-out\bin\elz-repl.exe release\
          Compress-Archive -Path release\* -DestinationPath ${{ matrix.artifact_name }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: ${{ matrix.asset_content_type }}

